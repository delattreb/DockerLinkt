version: '3.0'

volumes:
  portainer_data:

networks:
  linkt_net:
    ipam:
      driver: default
      config:
        - subnet: ${IP_NETWORK}

services:
  swagger_ui:
    container_name: ${PREFIX}swagger_ui${SUFFIX}
    hostname: ${PREFIX}swagger_ui${SUFFIX}
    networks:
      linkt_net:
        ipv4_address: ${IP_SWAGGERUI}
    build:
      context: .
      dockerfile: ./swagger_ui/Dockerfile
      args:
        - URLJSON=${URLJSON}
    ports:
      - "5000:8080"

  portainer:
    container_name: ${PREFIX}portainer${SUFFIX}
    hostname: ${PREFIX}portainer${SUFFIX}
    image: portainer/portainer
    networks:
      linkt_net:
        ipv4_address: ${IP_PORTAINER}
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  nginx:
    container_name: ${PREFIX}nginx${SUFFIX}
    hostname: ${PREFIX}nginx${SUFFIX}
    ports:
      - "8080:80"
      - "8083:443"
      - "${SOCKET}:${SOCKET}"
    networks:
      linkt_net:
        ipv4_address: ${IP_NGINX}
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        - MYUSER=${MYUSER}
    volumes:
      - /home/${MYUSER}/site:/var/www
      - ../${VOLUME}/nginx:/var/log/nginx

  redis:
    container_name: ${PREFIX}redis${SUFFIX}
    hostname : ${PREFIX}redis${SUFFIX}
    image: redis
    networks:
      linkt_net:
        ipv4_address: ${IP_REDIS}
    ports:
      - "6379:6379"
    volumes:
      - ../${VOLUME}/redis:/data

  mariadb:
    container_name: ${PREFIX}mariadb${SUFFIX}
    hostname : ${PREFIX}mariadb${SUFFIX}
    image: mariadb:latest
    networks:
      linkt_net:
        ipv4_address: ${IP_DB}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
    ports:
      - "3306:3306"
    volumes:
      - ../${VOLUME}/mariadb:/var/lib/mysql

  phpmyadmin:
    container_name: ${PREFIX}phpmyadmin${SUFFIX}
    hostname : ${PREFIX}phpmyadmin${SUFFIX}
    image: phpmyadmin/phpmyadmin
    networks:
      linkt_net:
        ipv4_address: ${IP_PHP_MYADMIN}
    environment:
      MYSQL_USERNAME: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
    restart: always
    ports:
      - "9090:80"
    volumes:
      - "/sessions"
    links:
      - "mariadb:db"

  sails_dev:
    container_name: ${PREFIX}sails${SUFFIX}
    hostname: ${PREFIX}sails${SUFFIX}
    build:
      context: .
      dockerfile: ./sails/Dockerfile
      args:
        - SAILS_VERSION=${SAILS_VERSION}
        - NODE_VERSION=${NODE_VERSION}
    networks:
      linkt_net:
        ipv4_address: ${IP_SAILS}
    ports:
      - "1337:1337"
    environment:
      - NODE_ENV=dev
    volumes:
      - /home/${MYUSER}/sails:/server

  postgres:
    container_name: ${PREFIX}postgres${SUFFIX}
    hostname: ${PREFIX}postgres${SUFFIX}
    image: postgres:10.1
    networks:
      linkt_net:
        ipv4_address: ${IP_POSTGRES}
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar

  sonarqube:
    container_name: ${PREFIX}sonarqube${SUFFIX}
    hostname: ${PREFIX}sonarqube${SUFFIX}
    #image: sonarqube:6.7.2
    build:
      context: .
      dockerfile: ./sonar/Dockerfile
    networks:
      linkt_net:
        ipv4_address: ${IP_SONARQUBE}    
    ports:
      - "7000:9000"
      - "5432:5432"
    links:
      - postgres:db
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    volumes:
      - /home/${MYUSER}/site:/home/site

  maildev:
    container_name: ${PREFIX}maildev${SUFFIX}
    hostname: ${PREFIX}maildev${SUFFIX}
    build:
      context: .
      dockerfile: ./maildev/Dockerfile
    networks:
      linkt_net:
        ipv4_address: ${IP_MAILDEV}
    ports:
      - "25:25"
      - "85:80"

  grafana:
    container_name: ${PREFIX}grafana${SUFFIX}
    hostname: ${PREFIX}grafana${SUFFIX}
    build:
      context: .
      dockerfile: ./grafana/Dockerfile
    networks:
      linkt_net:
        ipv4_address: ${IP_GRAFANA}
    ports:
      - "3000:3000"

  mssql:
    container_name: ${PREFIX}mssql${SUFFIX}
    hostname: ${PREFIX}mssql${SUFFIX}
    image: microsoft/mssql-server-linux:2017-latest
#    build:
#      context: .
#      dockerfile: ./mssql/Dockerfile
    networks:
      linkt_net:
        ipv4_address: ${IP_MSSQL}
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQLPASSWORD}
    ports:
      - "1433:1433"



